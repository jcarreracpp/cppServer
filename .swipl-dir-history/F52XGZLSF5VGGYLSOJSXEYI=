_HiStOrY_V2_
inc([1,7,5],[2]).
sode([],L).
sode([1,2,3,4],L).
sode([3,1,4,1,5,9],L).
halt.
bill(0,TP,TC).
bill(10,TP,TC).
halt.
bill(10,TP,TC).
halt.
bill(10,TP,TC).
halt.
bill(10,TP,TC).
bill(0,TP,TC).
halt.
bill(0,TP,TC).
halt.
bill(0,TP,TC).
halt.
bill(0,TP,TC).
bill(10,TP,TC).
halt.
bill(0,TP,TC).
bill(10,TP,TC).
bill(30,TP,TC).
halt.
is_father(john).
halt.
square([1,2,3,4],[1,4,9,16]).
halt.
square([1,2,3,4],[1,4,9,16]).
halt.
square([1,2,3,4],[1,4,9,16]).
square([1,2,3,4],R).
halt.
square([1,2,3,4],R).
square([1,2,3,4],[1,4,9,16]).
halt.
square([1,2,3,4],R).
square([1,2,3,4],[1,4,9,16]).
square([1,2,3,4],R).
halt.
square([1,2,3,4],R).
halt.
square([1,2,3,4],R).
halt.
is_father(john).
is_father(sam).
is_father(mary).
halt.
is_father(sam).
is_father(john).
is_father(mary).
halt.
is_aunt(jody,mary).
is_aunt(mary,jody).
is_aunt(sam,\040mary).
is_aunt(john,\040mary).
halt.
is_aunt(john,\040mary).
is_aunt(jody,mary).
halt.
is_grandparent(mary).
is_grandparent(jon).
is_grandparent(john).
is_grandparent(alice).
is_father(X).
halt.
is_father(X).
halt.
is_father(X).
is_aunt(X,mary).
is_grandfather(X).
halt.
is_aunt(X,mary).
is_grandfather(X).
halt.
is_grandfather(X).
halt.
is_grandfather(X).
is_aunt(X,mary).
is_father(X).
halt.
is_grandfather(X).
halt.
is_grandfather(X).
halt.
square([1,2,3,4],R).
halt.
square([1,2,3,4],R).
square([1,2,3,4],[1,4,9,16]).
halt.
R\040=\040[1,4,9,16],\040square([1,2,3,4],R).
R\040=\040[1,4,9,17],\040square([1,2,3,4],R).
R\040=\040[],\040square([],R).
halt.
is_father(X).
is_aunt(X,\040mary).
is_grandfather(X).
halt.
